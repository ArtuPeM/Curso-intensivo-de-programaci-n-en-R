x <- as.character(x)
x
class(x)
##NO SIEMPRE FUNCIONA
x <- c("a", "b", "c")
##NO SIEMPRE FUNCIONA
x <- c("a", "b", "c")
as.numeric(x)
x <- 5
x <- as.character(x)
x+x
x <- 5
x+x
##NO SIEMPRE FUNCIONA
x <- c("a", "b", "c")
x
y <- list(1:3, "a", 3)
y
class(y)
c <- list(1:4, c("a", "d", "v"))
c
class(c)
c <- list(1:4, "a", "d", "v")
c
c <- list(1:4, c("a", "d", "v"))
c
list(airquality, mtcars)
list(airquality, mtcars)
c <- list(1:4, x)
c
m <- matrix(1:30, nrow = 5, ncol= 6)
m
m2 <- matrix(c(1,4,5,2,3,4,5,6,7,8,9,1), nrow = 6, ncol = 2)
m2
m2 <- matrix(c(1,4,5,2,3,4,5,6,7,8,9), nrow = 6, ncol = 2)
m2
m2 <- matrix(c(1,4,5,2,3,4,5,6,7,8), nrow = 6, ncol = 2)
m2
m2 <- matrix(c(1,4,5,2,3,4,5,6,7,8,9,3), nrow = 6, ncol = 2)
m2
m2 <- matrix(c(1,4,5,2,3,4,5,6,7,8,9,3,5), nrow = 6, ncol = 2)
m2
m2 <- matrix(c(1,4,5,2,3,4,5,6,7,8,9,3), nrow = 6, ncol = 2)
m2
m <- 1:10
dim(m) <- c(5,2)
m
x <- 1:3
y <- 10:12
matriz1 <- cbind(x, y) #datos en diferentes columnas
class(matriz1)
matriz1
matriz2 <- rbind(x, y)#datos en diferentes filas
matriz2
## FILAS
data <- mtcars
class(data)
head(rownames(data))
head(data)
head(data)
data2 <- airquality
head(rownames(data2))
head(data2)
## COLUMNAS
names(data)
colnames(data)
data <- data.matrix(data)
head(data)
class(data)
y <- airquality
y <- as.matrix(y)
head(y)
class(y)
z <- data.frame(sujeto=1:10,
respuesta=c(T,T,F,T,F,T,T,T,T,F))
z
z
nrow(z)
ncol(z)
x <- factor(c("macho", "hembra", "hembra", "hembra", "macho"))
x
class(x)
y <- 1:5
data.frame(y, x)
data.frame(y,x)
data.frame(sujeto = y, sexo=x)
plot(data.frame(y, x))
xp <- data.frame(y, x)
plot(xp$y~xp$x)
unclass(x)
x <- factor(c("enero", "febrero", "marzo", "abril"))
x
x <- factor(x, levels = c("enero", "febrero", "marzo", "abril"))
x
x <- c(rep(c(1,2), each= 10))
x <- c(rep(c(1,2), each= 10))
x
x <- factor(x, labels = c("mujeres", "hombres"))
x
x <- c(rep(c(1,2), each= 10))
x <- factor(x, levels = c(2,1), labels = c("mujeres", "hombres"))
x
x <- c(1,2,NA,NA,NA,NA,3,4,5,6)
is.na(x)
is.nan(x)
x <- c(1,2,NaN,NaN,NA,NA,3,4,5,6)
is.na(x)
is.nan(x)
x <- 1:3
names(x)
names(x) <- c("objeto", "cosa", "item")
x
names(x)
x <- list(a=1:5, b=c(3,4,5,6,7), c=c("a", "b", "c", "d", "f"))
x
m <- matrix(sample(1:5),nrow = 6, ncol = 5)
m
dimnames(m) <- list(c("a","b","c", "d", "e", "f"), c("col1", "col2", "col3", "col4", "col5"))
m
## añadir nombres utilizando las otras dos funciones
m <- matrix(rnorm(30), nrow = 6, ncol = 5)
m
rownames(m) <- c("a","b","c", "d", "e", "f")
m
colnames(m) <- c("col1", "col2", "col3", "col4", "col5")
m
getwd()
url <- "http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/historicos/2021/01/datos_abiertos_covid19_28.01.2021.zip"
download.file(url, destfile = "./data/mexicocovid19.zip")
unzip("./data/mexicocovid19.zip", exdir = "./data")
url2 <- "https://datos.cdmx.gob.mx/dataset/9c45ead6-9016-469a-b6ba-41e3660590cb/resource/c97a1898-5343-4b01-8d76-9f74e5b0d072/download/capacidad-hospitalaria_micrositio-base_micrositio.csv"
download.file(url2, destfile = "./data/capacidadcovid19CDMX.csv")
## Ver archivos en un directorio
list.files("./data")
data1 <- read.table("./data/capacidadcovid19CDMX.csv", sep = ",", header = TRUE)
head(data1)
head(data1)
data2 <- read.csv("./data/capacidadcovid19CDMX.csv", stringsAsFactors = TRUE)
head(data2)
class(data2$Institucion)
library(xlsx)
##xlsx
library(xlsx)
?write.xlsx()
View(data)
write.xlsx(data, file="./data/data.xlsx")
y <- c("a","r","t","g","e","d","j","ñ")
y[y>"a"]
y>"a"
y[z]
z <- y>"a" ## ojo, no son lo mismo
y[z]
lista <- list(data=matrix(1:30, 6, 5), matriz=head(as.matrix(airquality), 20), vector1=rnorm(10))
head(lista)
lista["data"]
lista[["matriz"]]
class(lista["data"])
class(lista[["matriz"]])
## ver la clase de los objetos extraidos
lista$vector1
## ver la clase de los objetos extraidos
class(lista$vector1)
## ver la clase de los objetos extraidos
lista$matriz
##sinónimos
lista[[c(3,5)]]
lista[[3]][[5]]
lista[[3]][5]
lista$vector1[5]
## ver la clase de los objetos extraidos
lista$vector1
lista[c(1,3)]
##sinónimos
lista[[c(3,5)]]
##sinónimos
lista[[3,5]]
##sinónimos
lista[3,5]
lista[[2]][5,]
##concordancia parcial
lista$d
## Identificando los valores NA.
head(complete.cases(airquality))
head(is.na(airquality))
complete.cases(airquality)
airquality
length(airquality)
length(airquality$Ozone)
sum(complete.cases(airquality))
sum(is.na(airquality))
sum(!is.na(airquality))
## eliminando los valores NA de una tabla o matriz
head(airquality[complete.cases(airquality),],10)
complete.cases(airquality)
airquality[complete.cases(airquality),]
complete.cases(airquality)
### !is.na sólo funciona con vectores
head(airquality$Solar.R[is.na(!airquality$Solar.R)])
### !is.na sólo funciona con vectores
head(airquality[is.na(!airquality),])
head(airquality[is.na(!airquality),])
head(airquality[!is.na(airquality),])
airquality[!is.na(airquality),]
is.na(!airquality)
!airquality
head(airquality[is.na(!airquality),])
### !is.na sólo funciona con vectores
head(airquality$Solar.R[is.na(!airquality$Solar.R)])
### !is.na sólo funciona con vectores
head(airquality$Solar.R[is.na(airquality$Solar.R)])
### !is.na sólo funciona con vectores
head(airquality$Solar.R[!is.na(airquality$Solar.R)])
### !is.na sólo funciona con vectores
head(airquality$Solar.R[!is.na(airquality$Solar.R)])
## O bien con la función na.omit
head(na.omit(airquality))
head(na.omit(airquality))
x <- 1
for (i in 1:30) {
x[i] <- mean(rnorm(100))
}
x
for (i in 1:30) {
x[i] <- mean(rnorm(100))
break
}
x <- 1
for (i in 1:30) {
x[i] <- mean(rnorm(100))
break
}
next
for (i in 100) {
if(i <= 20){
next
}
}
i
for (i in 1:100) {
if(i <= 20){
next
}
}
i
for (i in 1:100) {
if(x <= 20){
x[i] <- i+i
next
}
}
x
for (i in 1:100) {
if(x <= 20){
next
else{
letters
seq_len(nrow(airquality))
x <- matrix(1:15, 5, 3)
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))) {
print(x[i,j])
}
}
x
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))) {
print(x[i,j])
}
}
#BREAK
x <- 1:5
for (val in x) {
if (val == 3){
break
}
print(val)
}
for (val in x) {
if (val == 3){
next
}
print(val)
}
x <- rnorm(100, 2,4)
which(x==2)
which(x>=2)
x <- rnorm(100, 2,4)
which(x>=2)
which(x>2 & x <2)
which(x==3)
!which(x==3)
!which(x>=3)
which(x>=3)
x[which(x>=3)]
x <- 1:3
names(x)
names(x) <- c("objeto", "cosa", "item")
x
names(x)
x <- list(a=1:5, b=c(3,4,5,6,7), c=c("a", "b", "c", "d", "f"))
x
sample(1:5)
m <- matrix(sample(1:5),nrow = 6, ncol = 5)
m
dimnames(m) <- list(c("a","b","c", "d", "e", "f"), c("col1", "col2", "col3", "col4", "col5"))
m
## añadir nombres utilizando las otras dos funciones
m <- matrix(rnorm(30), nrow = 6, ncol = 5)
## añadir nombres utilizando las otras dos funciones
m <- matrix(rnorm(30), nrow = 6, ncol = 5)
m
rownames(m) <- c("a","b","c", "d", "e", "f")
m
colnames(m) <- c("col1", "col2", "col3", "col4", "col5")
m
getwd()
file.exists("data")
!file.exists("data")
url <- "http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/historicos/2021/01/datos_abiertos_covid19_28.01.2021.zip"
url2 <- "https://datos.cdmx.gob.mx/dataset/9c45ead6-9016-469a-b6ba-41e3660590cb/resource/c97a1898-5343-4b01-8d76-9f74e5b0d072/download/capacidad-hospitalaria_micrositio-base_micrositio.csv"
## Ver archivos en un directorio
list.files("./data")
data1 <- read.table("./data/capacidadcovid19CDMX.csv", sep = ",", header = TRUE)
View(data1)
View(data1)
data2 <- read.csv("./data/capacidadcovid19CDMX.csv", stringsAsFactors = TRUE)
read.xlsx("./data/data.xlsx", sheetIndex = 1 , header = TRUE)
library(xlsx)
read.xlsx("./data/data.xlsx", sheetIndex = 1 , header = TRUE)
dataxlsx <- read.xlsx("./data/data.xlsx", sheetIndex = 1 , header = TRUE)
View(dataxlsx)
dataxlsx <- read.xlsx("./data/data.xlsx", sheetIndex = 1 , header = TRUE, rowIndex = 1:5)
View(dataxlsx)
dataxlsx <- read.xlsx("./data/data.xlsx", sheetIndex = 1 , header = TRUE, rowIndex = 1:5, colIndex = c(1,3,5)
View(dataxlsx)
View(dataxlsx)
dataxlsx <- read.xlsx("./data/data.xlsx", sheetIndex = 1 , header = TRUE, rowIndex = 1:5, colIndex = c(1,3,5)
dataxlsx <- read.xlsx("./data/data.xlsx", sheetIndex = 1 , header = TRUE, rowIndex = 1:5, colIndex = c(1,3,5))
dataxlsx <- read.xlsx("./data/data.xlsx", sheetIndex = 1 , header = TRUE, rowIndex = 1:5, colIndex = c(1,3,5))
View(dataxlsx)
?write.table
#filas  columas byte/objeto
1500000 * 120 * 8
#filas  columas byte/objeto
x <- 1500000 * 120 * 8
x*10e-9
x/10e-9
x/10e9
x/10e8
x <- rnorm(100, 2,4)
x[3]
x[1:10] ## una serie de elementos
x[c(3,5,8,9,15)] ## elementos específicos
y <- c("a","r","t","g","e","d","j","ñ")
y[5]
y>"a"
y[y>"a"]
y>"a"
z <- y>"a" ## ojo, no son lo mismo
y[z]
which(x>=3)
x[which(x>3)]
lista <- list(data=matrix(1:30, 6, 5), matriz=head(as.matrix(airquality), 20), vector1=rnorm(10))
head(lista)
lista["data"]
lista[["matriz"]]
class(lista["data"])
class(lista[["matriz"]])
## ver la clase de los objetos extraidos
lista$vector1
##----------
lista$data
lista[c(1,3)]
lista[c("data","vector1")]
##sinónimos
lista[[c(3,5)]]
##sinónimos
head(lista)
lista[[c(3,5)]]
lista[[3]][[5]]
lista[[3]][5]
lista$vector1[5]
##concordancia parcial
lista$d
lista[["d", exact=FALSE]]
##concordancia parcial
lista$d
data1[1,3]
data1
data1
head(data1)
data1[1,]
data1[1,]
data[c(3,5,7), 1:3]
data1[c(3,5,7), 1:3]
data1[c(3,5,7), 1:3]
## Columnas
head(data1[,3])
head(data1$Estatus_capacidad_hospitalaria)
data1$Estatus_capacidad_UCI
head(data1[data1$Estatus_capacidad_UCI == "buena",])
head(data1[data1$Estatus_capacidad_UCI == "buena",])
head(data1[data1$Estatus_capacidad_UCI == "Buena",])
View(data1)
head(data1[data1$Institucion == "EDOMEX","Institución"])
head(data1[data1$Institucion == "EDOMEX","Institucion"])
## Identificando los valores NA.
head(complete.cases(airquality))
head(is.na(airquality))
sum(complete.cases(airquality))
nrow(airquality)
sum(is.na(airquality))
sum(!is.na(airquality))
## eliminando los valores NA de una tabla o matriz
head(airquality[complete.cases(airquality),],10)
## eliminando los valores NA de una tabla o matriz
head(airquality[complete.cases(airquality),])
head(airquality[complete.cases(airquality),],10)
airquality
complete.cases(airquality)
### !is.na sólo funciona con vectores
head(airquality$Solar.R[!is.na(airquality$Solar.R)])
### !is.na sólo funciona con vectores
head(airquality$Solar.R[is.na(airquality$Solar.R)])
### !is.na sólo funciona con vectores
head(airquality$Solar.R[!is.na(airquality$Solar.R)])
## O bien con la función na.omit
head(na.omit(airquality))
head(na.omit(airquality))
x <- 11
if (x>=10){
y <- 1+1
} else{
y <- 1+2
}
y
if (x>=10){
y <- 1+1
} else {
y <- 1+2
}
y
if (x<10){
y <- 1+1
}
y
if (x<10){
y <- 2+2
}
y
x <- vector("numeric", 20)
for (i in 1:20) {
x[i] <- NA
}
x
for (i in 1:20) {
x[i] <- 2+i
}
x
for (i in 1:20) {
x <- 2+i
}
x
for (i in 1:20) {
x[i] <- 2+i
}
x
x <- matrix(1:15, 5, 3)
x
seq_len(nrow(x))
nrow(x)
seq_len(nrow(x))
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))) {
print(x[i,j])
}
}
x
for (i in seq_len(nrow(x))) {
for (j in seq_len(ncol(x))) {
print(x[j,i])
}
}
x <- 5
while (x>3 & x<10) {
x <- x+.5
}
x
while (x>3) {
x <- x+.5
}
x
x <- 5
while (x>3 & x<10) {
x <- x+.5
}
#BREAK
x <- 1:5
for (val in x) {
if (val == 3){
break
}
print(val)
}
#NEXT
x <- 1:5
for (val in x) {
if (val == 3){
next
}
print(val)
}
